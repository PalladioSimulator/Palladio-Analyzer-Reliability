/**
 * <copyright>
 * </copyright>
 *
 * $Id$
 */
package de.uka.ipd.sdq.sensitivity.provider;

import java.util.ArrayList;
import java.util.Collection;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.Notifier;
import org.eclipse.emf.edit.provider.ChangeNotifier;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.ComposedAdapterFactory;
import org.eclipse.emf.edit.provider.IChangeNotifier;
import org.eclipse.emf.edit.provider.IDisposable;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.INotifyChangedListener;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;

import de.uka.ipd.sdq.sensitivity.util.SensitivityAdapterFactory;

/**
 * This is the factory that is used to provide the interfaces needed to support Viewers. The
 * adapters generated by this factory convert EMF adapter notifications into calls to
 * {@link #fireNotifyChanged fireNotifyChanged}. The adapters also support Eclipse property sheets.
 * Note that most of the adapters are shared among multiple instances. <!-- begin-user-doc --> <!--
 * end-user-doc -->
 * 
 * @generated
 */
public class SensitivityItemProviderAdapterFactory extends SensitivityAdapterFactory implements
        ComposeableAdapterFactory, IChangeNotifier, IDisposable {
    /**
     * This keeps track of the root adapter factory that delegates to this adapter factory. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     * 
     * @generated
     */
    protected ComposedAdapterFactory parentAdapterFactory;

    /**
     * This is used to implement {@link org.eclipse.emf.edit.provider.IChangeNotifier}. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     * 
     * @generated
     */
    protected IChangeNotifier changeNotifier = new ChangeNotifier();

    /**
     * This keeps track of all the supported types checked by {@link #isFactoryForType
     * isFactoryForType}. <!-- begin-user-doc --> <!-- end-user-doc -->
     * 
     * @generated
     */
    protected Collection<Object> supportedTypes = new ArrayList<Object>();

    /**
     * This constructs an instance. <!-- begin-user-doc --> <!-- end-user-doc -->
     * 
     * @generated
     */
    public SensitivityItemProviderAdapterFactory() {
        supportedTypes.add(IEditingDomainItemProvider.class);
        supportedTypes.add(IStructuredItemContentProvider.class);
        supportedTypes.add(ITreeItemContentProvider.class);
        supportedTypes.add(IItemLabelProvider.class);
        supportedTypes.add(IItemPropertySource.class);
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link de.uka.ipd.sdq.sensitivity.SensitivityConfiguration} instances. <!-- begin-user-doc
     * --> <!-- end-user-doc -->
     * 
     * @generated
     */
    protected SensitivityConfigurationItemProvider sensitivityConfigurationItemProvider;

    /**
     * This creates an adapter for a {@link de.uka.ipd.sdq.sensitivity.SensitivityConfiguration}.
     * <!-- begin-user-doc --> <!-- end-user-doc -->
     * 
     * @generated
     */
    @Override
    public Adapter createSensitivityConfigurationAdapter() {
        if (sensitivityConfigurationItemProvider == null) {
            sensitivityConfigurationItemProvider = new SensitivityConfigurationItemProvider(this);
        }

        return sensitivityConfigurationItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link de.uka.ipd.sdq.sensitivity.CombinedSensitivityParameter} instances. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     * 
     * @generated
     */
    protected CombinedSensitivityParameterItemProvider combinedSensitivityParameterItemProvider;

    /**
     * This creates an adapter for a {@link de.uka.ipd.sdq.sensitivity.CombinedSensitivityParameter}
     * . <!-- begin-user-doc --> <!-- end-user-doc -->
     * 
     * @generated
     */
    @Override
    public Adapter createCombinedSensitivityParameterAdapter() {
        if (combinedSensitivityParameterItemProvider == null) {
            combinedSensitivityParameterItemProvider = new CombinedSensitivityParameterItemProvider(this);
        }

        return combinedSensitivityParameterItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link de.uka.ipd.sdq.sensitivity.ComponentReliabilityParameter} instances. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     * 
     * @generated
     */
    protected ComponentReliabilityParameterItemProvider componentReliabilityParameterItemProvider;

    /**
     * This creates an adapter for a
     * {@link de.uka.ipd.sdq.sensitivity.ComponentReliabilityParameter}. <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * 
     * @generated
     */
    @Override
    public Adapter createComponentReliabilityParameterAdapter() {
        if (componentReliabilityParameterItemProvider == null) {
            componentReliabilityParameterItemProvider = new ComponentReliabilityParameterItemProvider(this);
        }

        return componentReliabilityParameterItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link de.uka.ipd.sdq.sensitivity.StringParameterSequence} instances. <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * 
     * @generated
     */
    protected StringParameterSequenceItemProvider stringParameterSequenceItemProvider;

    /**
     * This creates an adapter for a {@link de.uka.ipd.sdq.sensitivity.StringParameterSequence}.
     * <!-- begin-user-doc --> <!-- end-user-doc -->
     * 
     * @generated
     */
    @Override
    public Adapter createStringParameterSequenceAdapter() {
        if (stringParameterSequenceItemProvider == null) {
            stringParameterSequenceItemProvider = new StringParameterSequenceItemProvider(this);
        }

        return stringParameterSequenceItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link de.uka.ipd.sdq.sensitivity.DoubleParameterRange} instances. <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * 
     * @generated
     */
    protected DoubleParameterRangeItemProvider doubleParameterRangeItemProvider;

    /**
     * This creates an adapter for a {@link de.uka.ipd.sdq.sensitivity.DoubleParameterRange}. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     * 
     * @generated
     */
    @Override
    public Adapter createDoubleParameterRangeAdapter() {
        if (doubleParameterRangeItemProvider == null) {
            doubleParameterRangeItemProvider = new DoubleParameterRangeItemProvider(this);
        }

        return doubleParameterRangeItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link de.uka.ipd.sdq.sensitivity.DoubleParameterSequence} instances. <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * 
     * @generated
     */
    protected DoubleParameterSequenceItemProvider doubleParameterSequenceItemProvider;

    /**
     * This creates an adapter for a {@link de.uka.ipd.sdq.sensitivity.DoubleParameterSequence}.
     * <!-- begin-user-doc --> <!-- end-user-doc -->
     * 
     * @generated
     */
    @Override
    public Adapter createDoubleParameterSequenceAdapter() {
        if (doubleParameterSequenceItemProvider == null) {
            doubleParameterSequenceItemProvider = new DoubleParameterSequenceItemProvider(this);
        }

        return doubleParameterSequenceItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link de.uka.ipd.sdq.sensitivity.InternalActionReliabilityParameter} instances. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     * 
     * @generated
     */
    protected InternalActionReliabilityParameterItemProvider internalActionReliabilityParameterItemProvider;

    /**
     * This creates an adapter for a
     * {@link de.uka.ipd.sdq.sensitivity.InternalActionReliabilityParameter}. <!-- begin-user-doc
     * --> <!-- end-user-doc -->
     * 
     * @generated
     */
    @Override
    public Adapter createInternalActionReliabilityParameterAdapter() {
        if (internalActionReliabilityParameterItemProvider == null) {
            internalActionReliabilityParameterItemProvider = new InternalActionReliabilityParameterItemProvider(this);
        }

        return internalActionReliabilityParameterItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link de.uka.ipd.sdq.sensitivity.ProbabilisticBranchParameter} instances. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     * 
     * @generated
     */
    protected ProbabilisticBranchParameterItemProvider probabilisticBranchParameterItemProvider;

    /**
     * This creates an adapter for a {@link de.uka.ipd.sdq.sensitivity.ProbabilisticBranchParameter}
     * . <!-- begin-user-doc --> <!-- end-user-doc -->
     * 
     * @generated
     */
    @Override
    public Adapter createProbabilisticBranchParameterAdapter() {
        if (probabilisticBranchParameterItemProvider == null) {
            probabilisticBranchParameterItemProvider = new ProbabilisticBranchParameterItemProvider(this);
        }

        return probabilisticBranchParameterItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link de.uka.ipd.sdq.sensitivity.HardwareMTTFParameter} instances. <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * 
     * @generated
     */
    protected HardwareMTTFParameterItemProvider hardwareMTTFParameterItemProvider;

    /**
     * This creates an adapter for a {@link de.uka.ipd.sdq.sensitivity.HardwareMTTFParameter}. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     * 
     * @generated
     */
    @Override
    public Adapter createHardwareMTTFParameterAdapter() {
        if (hardwareMTTFParameterItemProvider == null) {
            hardwareMTTFParameterItemProvider = new HardwareMTTFParameterItemProvider(this);
        }

        return hardwareMTTFParameterItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link de.uka.ipd.sdq.sensitivity.HardwareMTTRParameter} instances. <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * 
     * @generated
     */
    protected HardwareMTTRParameterItemProvider hardwareMTTRParameterItemProvider;

    /**
     * This creates an adapter for a {@link de.uka.ipd.sdq.sensitivity.HardwareMTTRParameter}. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     * 
     * @generated
     */
    @Override
    public Adapter createHardwareMTTRParameterAdapter() {
        if (hardwareMTTRParameterItemProvider == null) {
            hardwareMTTRParameterItemProvider = new HardwareMTTRParameterItemProvider(this);
        }

        return hardwareMTTRParameterItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link de.uka.ipd.sdq.sensitivity.ResourceMTTFParameter} instances. <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * 
     * @generated
     */
    protected ResourceMTTFParameterItemProvider resourceMTTFParameterItemProvider;

    /**
     * This creates an adapter for a {@link de.uka.ipd.sdq.sensitivity.ResourceMTTFParameter}. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     * 
     * @generated
     */
    @Override
    public Adapter createResourceMTTFParameterAdapter() {
        if (resourceMTTFParameterItemProvider == null) {
            resourceMTTFParameterItemProvider = new ResourceMTTFParameterItemProvider(this);
        }

        return resourceMTTFParameterItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link de.uka.ipd.sdq.sensitivity.ResourceMTTRParameter} instances. <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * 
     * @generated
     */
    protected ResourceMTTRParameterItemProvider resourceMTTRParameterItemProvider;

    /**
     * This creates an adapter for a {@link de.uka.ipd.sdq.sensitivity.ResourceMTTRParameter}. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     * 
     * @generated
     */
    @Override
    public Adapter createResourceMTTRParameterAdapter() {
        if (resourceMTTRParameterItemProvider == null) {
            resourceMTTRParameterItemProvider = new ResourceMTTRParameterItemProvider(this);
        }

        return resourceMTTRParameterItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link de.uka.ipd.sdq.sensitivity.NetworkReliabilityParameter} instances. <!-- begin-user-doc
     * --> <!-- end-user-doc -->
     * 
     * @generated
     */
    protected NetworkReliabilityParameterItemProvider networkReliabilityParameterItemProvider;

    /**
     * This creates an adapter for a {@link de.uka.ipd.sdq.sensitivity.NetworkReliabilityParameter}.
     * <!-- begin-user-doc --> <!-- end-user-doc -->
     * 
     * @generated
     */
    @Override
    public Adapter createNetworkReliabilityParameterAdapter() {
        if (networkReliabilityParameterItemProvider == null) {
            networkReliabilityParameterItemProvider = new NetworkReliabilityParameterItemProvider(this);
        }

        return networkReliabilityParameterItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link de.uka.ipd.sdq.sensitivity.CommunicationLinkReliabilityParameter} instances. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     * 
     * @generated
     */
    protected CommunicationLinkReliabilityParameterItemProvider communicationLinkReliabilityParameterItemProvider;

    /**
     * This creates an adapter for a
     * {@link de.uka.ipd.sdq.sensitivity.CommunicationLinkReliabilityParameter}. <!-- begin-user-doc
     * --> <!-- end-user-doc -->
     * 
     * @generated
     */
    @Override
    public Adapter createCommunicationLinkReliabilityParameterAdapter() {
        if (communicationLinkReliabilityParameterItemProvider == null) {
            communicationLinkReliabilityParameterItemProvider = new CommunicationLinkReliabilityParameterItemProvider(
                    this);
        }

        return communicationLinkReliabilityParameterItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link de.uka.ipd.sdq.sensitivity.SoftwareReliabilityParameter} instances. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     * 
     * @generated
     */
    protected SoftwareReliabilityParameterItemProvider softwareReliabilityParameterItemProvider;

    /**
     * This creates an adapter for a {@link de.uka.ipd.sdq.sensitivity.SoftwareReliabilityParameter}
     * . <!-- begin-user-doc --> <!-- end-user-doc -->
     * 
     * @generated
     */
    @Override
    public Adapter createSoftwareReliabilityParameterAdapter() {
        if (softwareReliabilityParameterItemProvider == null) {
            softwareReliabilityParameterItemProvider = new SoftwareReliabilityParameterItemProvider(this);
        }

        return softwareReliabilityParameterItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link de.uka.ipd.sdq.sensitivity.VariableUsageParameter} instances. <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * 
     * @generated
     */
    protected VariableUsageParameterItemProvider variableUsageParameterItemProvider;

    /**
     * This creates an adapter for a {@link de.uka.ipd.sdq.sensitivity.VariableUsageParameter}. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     * 
     * @generated
     */
    @Override
    public Adapter createVariableUsageParameterAdapter() {
        if (variableUsageParameterItemProvider == null) {
            variableUsageParameterItemProvider = new VariableUsageParameterItemProvider(this);
        }

        return variableUsageParameterItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link de.uka.ipd.sdq.sensitivity.UsageBranchParameter} instances. <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * 
     * @generated
     */
    protected UsageBranchParameterItemProvider usageBranchParameterItemProvider;

    /**
     * This creates an adapter for a {@link de.uka.ipd.sdq.sensitivity.UsageBranchParameter}. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     * 
     * @generated
     */
    @Override
    public Adapter createUsageBranchParameterAdapter() {
        if (usageBranchParameterItemProvider == null) {
            usageBranchParameterItemProvider = new UsageBranchParameterItemProvider(this);
        }

        return usageBranchParameterItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link de.uka.ipd.sdq.sensitivity.DoubleOffsetSequence} instances. <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * 
     * @generated
     */
    protected DoubleOffsetSequenceItemProvider doubleOffsetSequenceItemProvider;

    /**
     * This creates an adapter for a {@link de.uka.ipd.sdq.sensitivity.DoubleOffsetSequence}. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     * 
     * @generated
     */
    @Override
    public Adapter createDoubleOffsetSequenceAdapter() {
        if (doubleOffsetSequenceItemProvider == null) {
            doubleOffsetSequenceItemProvider = new DoubleOffsetSequenceItemProvider(this);
        }

        return doubleOffsetSequenceItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link de.uka.ipd.sdq.sensitivity.SoftwareFailureTypesParameter} instances. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     * 
     * @generated
     */
    protected SoftwareFailureTypesParameterItemProvider softwareFailureTypesParameterItemProvider;

    /**
     * This creates an adapter for a
     * {@link de.uka.ipd.sdq.sensitivity.SoftwareFailureTypesParameter}. <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * 
     * @generated
     */
    @Override
    public Adapter createSoftwareFailureTypesParameterAdapter() {
        if (softwareFailureTypesParameterItemProvider == null) {
            softwareFailureTypesParameterItemProvider = new SoftwareFailureTypesParameterItemProvider(this);
        }

        return softwareFailureTypesParameterItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link de.uka.ipd.sdq.sensitivity.FailureTypeResultSpecification} instances. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     * 
     * @generated
     */
    protected FailureTypeResultSpecificationItemProvider failureTypeResultSpecificationItemProvider;

    /**
     * This creates an adapter for a
     * {@link de.uka.ipd.sdq.sensitivity.FailureTypeResultSpecification}. <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * 
     * @generated
     */
    @Override
    public Adapter createFailureTypeResultSpecificationAdapter() {
        if (failureTypeResultSpecificationItemProvider == null) {
            failureTypeResultSpecificationItemProvider = new FailureTypeResultSpecificationItemProvider(this);
        }

        return failureTypeResultSpecificationItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link de.uka.ipd.sdq.sensitivity.FailureDimensionResultSpecification} instances. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     * 
     * @generated
     */
    protected FailureDimensionResultSpecificationItemProvider failureDimensionResultSpecificationItemProvider;

    /**
     * This creates an adapter for a
     * {@link de.uka.ipd.sdq.sensitivity.FailureDimensionResultSpecification}. <!-- begin-user-doc
     * --> <!-- end-user-doc -->
     * 
     * @generated
     */
    @Override
    public Adapter createFailureDimensionResultSpecificationAdapter() {
        if (failureDimensionResultSpecificationItemProvider == null) {
            failureDimensionResultSpecificationItemProvider = new FailureDimensionResultSpecificationItemProvider(this);
        }

        return failureDimensionResultSpecificationItemProvider;
    }

    /**
     * This returns the root adapter factory that contains this factory. <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * 
     * @generated
     */
    public ComposeableAdapterFactory getRootAdapterFactory() {
        return parentAdapterFactory == null ? this : parentAdapterFactory.getRootAdapterFactory();
    }

    /**
     * This sets the composed adapter factory that contains this factory. <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * 
     * @generated
     */
    public void setParentAdapterFactory(ComposedAdapterFactory parentAdapterFactory) {
        this.parentAdapterFactory = parentAdapterFactory;
    }

    /**
     * <!-- begin-user-doc --> <!-- end-user-doc -->
     * 
     * @generated
     */
    @Override
    public boolean isFactoryForType(Object type) {
        return supportedTypes.contains(type) || super.isFactoryForType(type);
    }

    /**
     * This implementation substitutes the factory itself as the key for the adapter. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     * 
     * @generated
     */
    @Override
    public Adapter adapt(Notifier notifier, Object type) {
        return super.adapt(notifier, this);
    }

    /**
     * <!-- begin-user-doc --> <!-- end-user-doc -->
     * 
     * @generated
     */
    @Override
    public Object adapt(Object object, Object type) {
        if (isFactoryForType(type)) {
            Object adapter = super.adapt(object, type);
            if (!(type instanceof Class<?>) || (((Class<?>) type).isInstance(adapter))) {
                return adapter;
            }
        }

        return null;
    }

    /**
     * This adds a listener. <!-- begin-user-doc --> <!-- end-user-doc -->
     * 
     * @generated
     */
    public void addListener(INotifyChangedListener notifyChangedListener) {
        changeNotifier.addListener(notifyChangedListener);
    }

    /**
     * This removes a listener. <!-- begin-user-doc --> <!-- end-user-doc -->
     * 
     * @generated
     */
    public void removeListener(INotifyChangedListener notifyChangedListener) {
        changeNotifier.removeListener(notifyChangedListener);
    }

    /**
     * This delegates to {@link #changeNotifier} and to {@link #parentAdapterFactory}. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     * 
     * @generated
     */
    public void fireNotifyChanged(Notification notification) {
        changeNotifier.fireNotifyChanged(notification);

        if (parentAdapterFactory != null) {
            parentAdapterFactory.fireNotifyChanged(notification);
        }
    }

    /**
     * This disposes all of the item providers created by this factory. <!-- begin-user-doc --> <!--
     * end-user-doc -->
     * 
     * @generated
     */
    public void dispose() {
        if (sensitivityConfigurationItemProvider != null)
            sensitivityConfigurationItemProvider.dispose();
        if (combinedSensitivityParameterItemProvider != null)
            combinedSensitivityParameterItemProvider.dispose();
        if (componentReliabilityParameterItemProvider != null)
            componentReliabilityParameterItemProvider.dispose();
        if (stringParameterSequenceItemProvider != null)
            stringParameterSequenceItemProvider.dispose();
        if (doubleParameterRangeItemProvider != null)
            doubleParameterRangeItemProvider.dispose();
        if (doubleParameterSequenceItemProvider != null)
            doubleParameterSequenceItemProvider.dispose();
        if (internalActionReliabilityParameterItemProvider != null)
            internalActionReliabilityParameterItemProvider.dispose();
        if (probabilisticBranchParameterItemProvider != null)
            probabilisticBranchParameterItemProvider.dispose();
        if (hardwareMTTFParameterItemProvider != null)
            hardwareMTTFParameterItemProvider.dispose();
        if (hardwareMTTRParameterItemProvider != null)
            hardwareMTTRParameterItemProvider.dispose();
        if (resourceMTTFParameterItemProvider != null)
            resourceMTTFParameterItemProvider.dispose();
        if (resourceMTTRParameterItemProvider != null)
            resourceMTTRParameterItemProvider.dispose();
        if (networkReliabilityParameterItemProvider != null)
            networkReliabilityParameterItemProvider.dispose();
        if (communicationLinkReliabilityParameterItemProvider != null)
            communicationLinkReliabilityParameterItemProvider.dispose();
        if (softwareReliabilityParameterItemProvider != null)
            softwareReliabilityParameterItemProvider.dispose();
        if (variableUsageParameterItemProvider != null)
            variableUsageParameterItemProvider.dispose();
        if (usageBranchParameterItemProvider != null)
            usageBranchParameterItemProvider.dispose();
        if (doubleOffsetSequenceItemProvider != null)
            doubleOffsetSequenceItemProvider.dispose();
        if (softwareFailureTypesParameterItemProvider != null)
            softwareFailureTypesParameterItemProvider.dispose();
        if (failureTypeResultSpecificationItemProvider != null)
            failureTypeResultSpecificationItemProvider.dispose();
        if (failureDimensionResultSpecificationItemProvider != null)
            failureDimensionResultSpecificationItemProvider.dispose();
    }

}
